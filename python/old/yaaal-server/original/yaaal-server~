#!/usr/bin/python
# coding: utf-8
# author: Niklas Rosenstein

import os
import sys
import argparse
import BaseHTTPServer

__path__ = os.path.abspath(os.path.dirname(__file__))
sys.path.insert(0, __path__)

# Search yaaal in parent-directories
try:
    import yaaal.server
except ImportError:
    path = os.path.split(__path__)[0]
    while path:
        full = os.path.join(path, 'yaaal', '__init__.py')
        if os.path.exists(full):
            break
        else:
            path = os.path.split(path)[0]
        if not path.strip():
            path = None

    if path:
        sys.path.insert(0, path)
        import yaaal.server
    else:
        raise

import yaaal.server

try:
    import config
except ImportError:
    print "No module named `config`. The YAAAL Server is missing the " + \
          "configuration file."
    sys.exit(1)

class YAAALRequestHandler(yaaal.server.BaseRequestHandler):
    """ This class implements the YAAAL request handling. """

    def on_init(self):
        self.add_handlers(*config.HANDLERS.iteritems())

    def handle_404(self, *args, **kwargs):
        if config.HANDLE_404:
            return config.HANDLE_404(*args, **kwargs)
        else:
            return yaaal.server.BaseRequestHandler.handle_404(self, *args, **kwargs)

    def handle_exception(self, *args, **kwargs):
        if config.HANDLE_EXCEPTION:
            return config.HANDLE_EXCEPTION(*args, **kwargs)
        else:
            return yaaal.server.BaseRequestHandler.handle_exception(self, *args,
                                                             **kwargs)


def main():
    parser = argparse.ArgumentParser(description='Start the YAAAL Server.')
    parser.add_argument('port', nargs='?', default='6150', type=int,
        help='The port to bind the server with. default is ' +
             '\033[1;31m6150\033[0m.')
    parser.add_argument('-once', action='store_true', default=False,
        help='Makes the server handle only a single request.')
    parser.add_argument('-l', '--logging', action='store_false', default=True,
        help='Disable the request-handlers loggings.')
    args = parser.parse_args()


    handler = YAAALRequestHandler(logging=args.logging)
    httpd = BaseHTTPServer.HTTPServer(('localhost', args.port), handler)

    if args.once:
        httpd.handle_request()
    else:
        httpd.serve_forever()

if __name__ == "__main__":
    main()


